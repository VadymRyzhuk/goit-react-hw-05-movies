{"version":3,"file":"static/js/642.4c3653b1.chunk.js","mappings":"yNAoDA,UA/CoB,WAClB,IAGQA,GAAYC,EAAAA,EAAAA,MAAZD,QACRE,GAA4BC,EAAAA,EAAAA,UAAS,QAAOC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAArCI,EAAMF,EAAA,GAAEG,EAASH,EAAA,GACxBI,GAAsCL,EAAAA,EAAAA,UAAS,MAAKM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA7CE,EAAWD,EAAA,GAAEE,EAAcF,EAAA,GAClCG,GAA0BT,EAAAA,EAAAA,UAAS,MAAKU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAAjCE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GAkBtB,OAjBAG,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAmB,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEH,OAFGF,EAAAC,KAAA,EAExBjB,EAAU,WAAWgB,EAAAE,KAAA,GACGC,EAAAA,EAAAA,IAAgB1B,GAAS,KAAD,EAA1CsB,EAASC,EAAAI,KACfhB,EAAeW,GAGff,EAAU,WAAWgB,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAK,GAAAL,EAAA,SAErBR,EAASQ,EAAAK,GAAMC,SACftB,EAAU,SAAS,yBAAAgB,EAAAO,OAAA,GAAAT,EAAA,kBAEtB,kBAZwB,OAAAH,EAAAa,MAAA,KAAAC,UAAA,KAczBf,GACF,GAAG,CAACjB,KAEFiC,EAAAA,EAAAA,MAAA,OAAAC,SAAA,CACc,UAAX5B,IAAsB6B,EAAAA,EAAAA,KAAA,KAAAD,SAAA,UAAAE,OAActB,KACZ,KAAb,OAAXJ,QAAW,IAAXA,OAAW,EAAXA,EAAa2B,UACZF,EAAAA,EAAAA,KAAA,KAAAD,SAAG,mDAEO,YAAX5B,IACC6B,EAAAA,EAAAA,KAAA,MAAIG,MA/BM,CACdC,UAAW,QA8BYL,SAChBxB,EAAY8B,KAAI,SAAAC,GAAI,OACnBN,EAAAA,EAAAA,KAAA,MAAAD,UACED,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACED,EAAAA,EAAAA,MAAA,MAAAC,SAAA,CAAI,WAASO,EAAKC,WAClBP,EAAAA,EAAAA,KAAA,KAAAD,SAAIO,EAAKE,cAHJF,EAAKG,GAKT,QAMjB,C","sources":["pages/ReviewsPage.jsx"],"sourcesContent":["import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { showMovieReview } from 'services/api';\n\nconst ReviewsPage = () => {\n  const styleUl = {\n    listStyle: 'none',\n  };\n  const { movieId } = useParams();\n  const [status, setStatus] = useState('idle');\n  const [movieReview, setMovieReview] = useState(null);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const showMovieReviewById = async () => {\n      try {\n        setStatus('pending');\n        const movieData = await showMovieReview(movieId);\n        setMovieReview(movieData);\n        // console.log(movieData); //--------------------------------------------------------------------LOG array 20!!\n\n        setStatus('success');\n      } catch (error) {\n        setError(error.message);\n        setStatus('error');\n      }\n    };\n\n    showMovieReviewById();\n  }, [movieId]);\n  return (\n    <div>\n      {status === 'error' && <p>{`Error: ${error}`}</p>}\n      {movieReview?.length === 0 && (\n        <p>We donâ€™t have any reviews for this movie.</p>\n      )}\n      {status === 'success' && (\n        <ul style={styleUl}>\n          {movieReview.map(item => (\n            <li key={item.id}>\n              <div>\n                <h5>Author: {item.author}</h5>\n                <p>{item.content}</p>\n              </div>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport default ReviewsPage;\n"],"names":["movieId","useParams","_useState","useState","_useState2","_slicedToArray","status","setStatus","_useState3","_useState4","movieReview","setMovieReview","_useState5","_useState6","error","setError","useEffect","showMovieReviewById","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","movieData","_context","prev","next","showMovieReview","sent","t0","message","stop","apply","arguments","_jsxs","children","_jsx","concat","length","style","listStyle","map","item","author","content","id"],"sourceRoot":""}